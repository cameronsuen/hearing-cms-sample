{"version":3,"sources":["Navbar.js","LoginForm.js","Manual.js","validate.js","Counter.js","App.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnlKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["var NavItem = React.createClass({\n\tcomponentDidMount: function() {\n\t\t$('#' + this.props.functionHref + ' a').click((e) => {\n\t\t\te.preventDefault();\n\t\t});\n\t},\n\n\trender: function() {\n\t\treturn (\n\t\t\t<li className={this.props.liClass} id={this.props.functionHref} onClick={this.props.clickAction.bind(null, this.props.functionHref)}><a href=\"\"><span className={this.props.className}></span> {this.props.functionName}</a></li>\n\t\t);\n\t}\n});\n\nvar Navbar = React.createClass({\n\trender: function() {\n\t\tvar itemList = [];\n\t\tvar logout_icon = <li></li>;\n\t\tfor (var i in this.props.sysFunction) {\n\t\t\tif (this.props.sysFunction[i] === this.props.currentPath) {\n\t\t\t\titemList.push(<NavItem functionName={i} liClass=\"active\" functionHref={this.props.sysFunction[i]} clickAction={this.props.switchPage} className=\"\" key={i} />);\n\t\t\t} else {\n\t\t\t\titemList.push(<NavItem functionName={i} functionHref={this.props.sysFunction[i]} clickAction={this.props.switchPage} className=\"\" key={i} />);\n\t\t\t}\n\t\t}\n\t\tif (itemList.length !== 0) {\n\t\t\tconsole.log(this.props.logout);\n\t\t\tlogout_icon = <NavItem clickAction={this.props.logout} className=\"glyphicon glyphicon-log-out\" functionHref=\"logout\" functionName=\"Logout\" />\n\t\t}\n\t\treturn (\n\t\t\t<nav className=\"navbar navbar-default navbar-fixed-top\">\n    \t\t  <div className=\"container-fluid\">\n      \t\t    <div className=\"navbar-header\">\n\t    \t      <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\n\t      \t        <span className=\"sr-only\">Toggle navigation</span>\n\t\t  \t        <span className=\"icon-bar\"></span>\n\t\t            <span className=\"icon-bar\"></span>\n\t\t            <span className=\"icon-bar\"></span>\n\t              </button>\n\t              <a className=\"navbar-brand\" href=\"#\">Hearing CMS</a>\n\t            </div>\n\n                <div className=\"collapse navbar-collapse\" id=\"myNavbar\">\n\t              <ul className=\"nav navbar-nav\">{itemList}</ul>\n\t              <ul className=\"nav navbar-nav navbar-right\">\n\t\t\t\t  \t{logout_icon}\n\t              </ul>\n\t            </div>\n\t          </div>\n  \t\t\t</nav>\n\t\t);\n\t}\n});\n","var LoginForm = React.createClass({\n\tcomponentDidMount: function() {\n\t\t$('#login_form').submit((e)=>{\n\t\t\te.preventDefault();\n\t\t\tvar credentials = {\n\t\t\t\tusername: $('#inputUsername').val(),\n\t\t\t\tpassword: $('#inputPassword').val()\n\t\t\t}\n\n\t\t\tRequest.post('/authenticate', credentials, (data)=>{\n\t\t\t\tlocalStorage.accessToken = data.access_token;\n\t\t\t});\n\t\t});\n\t},\n\n\trender: function() {\n\t\treturn (\n\t\t  <div>\n\t\t  \t<form id=\"login_form\" className=\"form-horizontal\">\n\t\t    <fieldset>\n\t\t      <div className=\"loginForm\">\n\t\t        <div className=\"panel panel-warning\">\n\t\t\t  \n\t\t\t      <div className=\"panel-heading\">\n\t\t\t        <h3 className=\"panel-title\">Login</h3>\n\t\t\t      </div>\n\n\t\t\t      <div className=\"panel-body\">\n\t\t\t    \n\t\t\t        <div className=\"form-group\">\n\t\t              <label htmlFor=\"inputUsername\" className=\"col-md-2 control-label\">\n\t\t\t\t        Username\n\t\t\t\t      </label>\n\t\t\t\t      <div className=\"col-md-10\">\n\t\t\t\t        <input className=\"form-control\" id=\"inputUsername\" placeholder=\"username\" type=\"text\"></input>\n\t\t\t\t      </div>\n\t\t\t\t    </div>\n\n                    <div className=\"form-group\">\n\t\t              <label htmlFor=\"inputPassword\" className=\"col-md-2 control-label\">\n\t\t\t\t        Password\n\t\t\t\t      </label>\n\t\t\t\t      <div className=\"col-md-10\">\n\t\t\t\t        <input className=\"form-control\" id=\"inputPassword\" placeholder=\"password\" type=\"password\"></input>\n\t\t\t\t      </div>\n\t\t\t\t    </div>\n                    \n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t          <div className=\"col-md-12\">\n\t\t\t            <button type=\"submit\" className=\"btn btn-warning center\">Submit</button>\n\t\t\t          </div>\n\t\t            </div>\n\n\t\t\t      </div>\n\t\t\t    </div>\n\t\t      </div>\n\t\t    </fieldset>\n\t\t  </form>\n\t\t  </div>\n\t\t);\n\t}\n});\n\n/*ReactDOM.render(\n\t<LoginForm />,\n\tdocument.getElementById('loginform')\n);*/\n","var Manual = React.createClass({\n\trender: function() {\n\t\treturn (\n\t\t  <div className=\"panel panel-info\">\n\t\t    <div className=\"panel-heading\">\n\t\t\t  <h3 className=\"panel-title\">Manual</h3>\n\t\t\t</div>\n\t\t\t<div className=\"panel-body\">\n\t\t      <ul>\n\t\t\t    <li>\n\t\t\t      <h6>Listen to voice played</h6>\n\t\t\t    </li>\n\t\t\t    <li>\n\t\t\t      <h6>Compare the voice played to the word displayed on the word list</h6>\n\t\t\t    </li>\n\t\t\t    <li>\n\t\t\t      <h6>Determine whether the sample is correct, incorrect, unsure or is a noise</h6>\n\t\t\t    </li>\n\t\t      </ul>\n\t\t\t</div>\n\t\t  </div>\n\t\t);\n\t}\n});\n\n/*ReactDOM.render(\n\t<Manual />,\n\tdocument.getElementById('manual')\n);*/\n","var Button = React.createClass({\n\n  update: function() {\n  \tvar content = {\n\t  op: 'add',\n\t  field: this.props.fieldId,\n      value: 1\n\t};\n\t$.ajax('/api/samples/' + this.props.id, {\n\t  method: 'PATCH',\n\t  accepts: 'application/json',\n\t  contentType: 'application/json',\n\t  data: JSON.stringify(content)\n\t}).done((data) => {\n\t  this.props.onClick();\n\t  PubSub.publish('sampleViewed', 'sampleViewed');\n\t});\n    \n  },\n\n  render: function() {\n    var btnClass = \"btn \" + this.props.btnClass + \" btn-block\";\n\tvar iconClass = \"glyphicon \" + this.props.iconClass;\n    return (\n      <div className=\"col-md-3\">\n\t    <a id={this.props.fieldId} onClick={this.update} className={btnClass}>\n\t\t  <span className={iconClass}></span>\n\t\t  {this.props.text}\n\t\t</a>\n\t  </div>\n\t);\n  }\n});\n\nvar ButtonGroup = React.createClass({\n  render: function() {\n    return (\n      <div className=\"row\">\n\t    <Button id={this.props.id} fieldId=\"correct\" btnClass=\"btn-primary\" iconClass=\"glyphicon-ok-sign\" text=\"Correct\" onClick={this.props.onClick} />\n\t\t<Button id={this.props.id} fieldId=\"incorrect\" btnClass=\"btn-danger\" iconClass=\"glyphicon-remove-sign\" text=\"Incorrect\" onClick={this.props.onClick} />\n\t\t<Button id={this.props.id} fieldId=\"unsure\" btnClass=\"btn-warning\" iconClass=\"glyphicon-question-sign\" text=\"Unsure\" onClick={this.props.onClick} />\n\t\t<Button id={this.props.id} fieldId=\"noise\" btnClass=\"btn-info\" iconClass=\"glyphicon-info-sign\" text=\"Noise\" onClick={this.props.onClick} />  \n\t  </div>\n    );\n  }\n});\n\nvar WordImage = React.createClass({\n  render: function() {\n    return (\n\t  <div className=\"row\">\n\t    <div className=\"col-md-8 col-md-offset-2\">\n\t\t  <img src={this.props.src} className=\"img-responsive center\" />\n\t    </div>\n      </div>\n\t);\n  }\n});\n\nvar Text = React.createClass({\n  render: function() {\n    return (\n      <div className=\"row\">\n\t    <div className=\"col-md-8 col-md-offset-2\">\n\t\t  <h3 className=\"text-center\">{this.props.text}</h3>\n\t\t</div>\n\t  </div>\n\t);\n  }\n});\n\nvar Player = React.createClass({\n  componentDidUpdate: function() {\n  \t// Load the new source\n  \t$('#player').load();\n  },\n\n  render: function() {\n    return (\n      <div className=\"row\">\n\t    <div className=\"col-md-8 col-md-offset-2\">\n\t      <audio id=\"player\" controls className=\"center\">\n\t\t    <source src={'/file/audio/' + this.props.src} type=\"audio/wav\">\n\t\t    </source>\n\t\t  </audio>\n\t    </div>\n      </div>\n\t);\n  }\n});\n\nvar SampleCard = React.createClass({\n\tgetInitialState: function() {\n\t\treturn {\n\t\t\tresult: '',\n\t\t\ti: -1,\n\t\t\tloaded: false\n\t\t};\n\t}, \n\n\tgetSample: function() {\n\t\tthis.request = Request.get('/api/samples', null, (result) => {\n\t\t\tthis.setState({\n\t\t\t\tresult: result,\n\t\t\t\ti: 0,\n\t\t\t\tloaded: true\n\t\t\t});\n\t\t}.bind(this));\n\t},\n\n\tcomponentDidMount: function() {\n\t\tthis.getSample();\n\t},\n\n\tcomponentWillUnmount: function() {\n\t\t//this.request.abort();\n\t},\n\t\n\tnextSample: function() {\n\t\tif (this.state.i + 1 < this.state.result.length) {\n\t\t\tthis.setState({\n\t\t\t\ti: this.state.i + 1\n\t\t\t});\n\t\t} else {\n\t\t\tthis.getSample();\t\n\t\t}\n\t},\n\n\trender: function() {\n\t\t// Check if component is completely rendered\n\t\tif (this.state.loaded) {\n\t\t\treturn (\n\t\t\t\t<div className=\"sampleCard\">\n\t\t\t\t  <div className=\"panel panel-primary\">\n\t\t\t\t\t<div className=\"panel-heading\">\n\t\t\t\t\t  <h3 className=\"panel-title\">Validation</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"panel-body\">  \n\t\t\t\t\t  <div className=\"container-fluid\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<WordImage src={'/file/img/' + this.state.result[this.state.i].img} />\n\t\t\t\t\t\t<Text text={this.state.result[this.state.i].word} />    \n\n\t\t\t\t\t\t<Player src={this.state.result[this.state.i].sample} />;\n\t\t\t\t\t\t<ButtonGroup id={this.state.result[this.state.i].id} onClick={this.nextSample} />    \n\n\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <div>Loading</div>;\n\t\t}\n\t}\n});\n\n/*ReactDOM.render(\n\t<SampleCard />,\n\tdocument.getElementById('card')\n);*/\n","var Counter = React.createClass({\n\n\tgetInitialState: function() {\n\t\treturn { count: 0 };\n\t},\n\t\n\tcomponentWillMount: function() {\n\t\tPubSub.subscribe('sampleViewed', (msg, data) => {\n\t\t\tthis.setState({ count: this.state.count + 1 });\n\t\t});\n\t},\n\t\n\trender: function() {\n\t\treturn (\n\t \t\t<div className=\"counterCard\">\n\t\t\t  <div className=\"panel panel-success\">\n\t\t\t    <div className=\"panel-heading\">\n\t\t\t\t  <h3 className=\"panel-title\">Counter</h3>\n\t\t\t\t</div>\n                <div className=\"panel-body\">\n\t\t\t\t  <p className=\"text-center lead\">You have validated</p>\n\t\t\t\t  <h3 className=\"text-center count\">{ this.state.count }</h3>\n\t\t\t\t  <p className=\"text-center lead\">record(s) so far</p>\n\t\t\t\t</div>\n\t\t      </div>\n\t\t\t</div>\n\t\t);\n\t}\n});\n\n/*ReactDOM.render(\n\t<Counter />,\n\tdocument.getElementById('counter')\n);*/\n","var App = React.createClass({\n\t\n\tswitchPage: function(name) {\n\t\tvar selector = 'li#' + name;\n\t\twindow.history.pushState(name, name, '/' + name);\n\t\tconsole.log(selector);\n\t\t$('li').removeClass('active');\n\t\t$(selector).addClass('active');\n\t},\n\n\tlogout: function() {\n\t\tconsole.log('here called');\n\t\tlocalStorage.removeItem('accessToken');\n\t\tthis.setState({ invalidToken: true });\n\t},\n\n\tgetInitialState: function() {\n\t\treturn { invalidToken: null, sysFunction: [] };\n\t},\n\n\tcomponentWillMount: function() {\n\t\tPubSub.subscribe('valid_token', (msg, data) => {\n\t\t\tif (this.state.invalidToken !== false) {\n\t\t\t\tRequest.get('/sysFunction', null, (data) => {\n\t\t\t\t\tthis.setState({ sysFunction: data });\n\t\t\t\t});\n\t\t\t\tthis.setState({ invalidToken: false });\t\n\t\t\t} \n\t\t});\n\n\t\tPubSub.subscribe('invalid_token', (msg, data) => {\n\t\t\tthis.setState({ invalidToken: true });\n\t\t});\t\n\t\t\n\t\tRequest.get('/sysFunction', null, (data) => {\n\t\t\tthis.setState({ sysFunction: data });\n\t\t});\n\n\t\tconsole.log(location.pathname.substring(1));\n\n\t},\n\n\trender: function() {\n\t\tconsole.log(this.logout);\n\t\tif (this.state.invalidToken === null) {\n\t\t\treturn (\n\t\t\t\t<div><Navbar /></div>\n\t\t\t);\n\t\t} else if (!this.state.invalidToken) {\n\t\t\treturn (\n\t\t\t\t<div>\t\t\t\t\n\t\t\t\t  <Navbar currentPath={location.pathname.substring(1)} sysFunction={this.state.sysFunction} logout={this.logout} switchPage={this.switchPage} />\n\n\t\t\t\t  <div className=\"container-fluid\">\n\t\t\t\t    <div className=\"row\">\n\t\t\t\t      <div className=\"col-md-4 col-md-offset-1\">\n\t\t\t\t\t    <div className=\"row\">\n\t\t\t\t\t\t  <div className=\"col-md-12\"> \n\t\t\t\t\t\t    <Counter />\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t    </div>\n\n\t\t\t\t\t    <div className=\"row\">\n\t\t\t\t\t      <div className=\"col-md-12\">\n\t\t\t\t\t\t    <Manual />\n\t\t\t\t\t      </div>\n\t\t\t\t\t    </div>\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"col-md-6\">\n\t\t\t\t        <SampleCard />\n\t\t\t\t      </div>\n\t\t\t\t    </div>\n\t\t\t      </div>\n\t\t\t    </div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t  <Navbar />\n\t\t\t\t  <div className=\"container-fluid\">\n\t\t\t\t  \n\t\t\t\t    <div className=\"row\">\n\t\t\t\t      <div className=\"col-md-4 col-md-offset-4\">\n\t\t\t\t\t    <LoginForm />\n\t\t\t\t\t  </div>\t\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n});\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('app')\n);\n"],"sourceRoot":"/source/"}