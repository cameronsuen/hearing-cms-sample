{"version":3,"sources":["App.js","Counter.js","Helper.js","LoginForm.js","Manual.js","Request.js","figure.js","validate.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzfile":"all.js","sourcesContent":["var App = React.createClass({\n\n\trender: function() {\n\t\t<div class=\"row\">\n\t\t  <div class=\"col-md-4 col-md-offset-1\">\n\t\t\t<div class=\"row\">\n\t\t\t  <div class=\"col-md-12\"> \n\t\t\t  \t<Counter />\n\t\t\t  </div>\n\t\t\t</div>\n\n\t\t\t<div class=\"row\">\n\t\t\t  <div class=\"col-md-12\">\n\t\t\t  \t<Manual />\n\t\t\t  </div>\n\t\t\t</div>\n\t\t  </div>\n\n\t\t  <div class=\"col-md-6\">\n\t\t  \t<SampleCard />\n\t\t  </div>\n\t\t</div>\n\n\t}\n});\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('app')\n);\n","var Counter = React.createClass({\n\n\tgetInitialState: function() {\n\t\treturn { count: 0 };\n\t},\n\t\n\tcomponentWillMount: function() {\n\t\tPubSub.subscribe('sampleViewed', (msg, data) => {\n\t\t\tthis.setState({ count: this.state.count + 1 });\n\t\t});\n\t},\n\t\n\trender: function() {\n\t\treturn (\n\t \t\t<div className=\"counterCard\">\n\t\t\t  <div className=\"panel panel-success\">\n\t\t\t    <div className=\"panel-heading\">\n\t\t\t\t  <h3 className=\"panel-title\">Counter</h3>\n\t\t\t\t</div>\n                <div className=\"panel-body\">\n\t\t\t\t  <p className=\"text-center lead\">You have validated</p>\n\t\t\t\t  <h3 className=\"text-center count\">{ this.state.count }</h3>\n\t\t\t\t  <p className=\"text-center lead\">record(s) so far</p>\n\t\t\t\t</div>\n\t\t      </div>\n\t\t\t</div>\n\t\t);\n\t}\n});\n\n/*ReactDOM.render(\n\t<Counter />,\n\tdocument.getElementById('counter')\n);*/\n","var Helper = React.createClass({\n\trender: function() {\n\t\treturn (\n\t\t  <div className=\"Helper\">\n\t\t    <div className=\"panel panel-info\">\n\t\t\t  <h3 className=\"panel-title\">Helper</h3>\n\t\t\t</div>\n\t\t\t<div className=\"panel-body\">\n\t\t\t  <div className=\"list-group\">\n\t\t\t    <a href=\"#\" className\n\t\t\t  </div>\n\t\t\t</div>\n\t\t  </div>\n\t\t);\n\t}\n});\n","var LoginForm = React.createClass({\n\tcomponentDidMount: function() {\n\t\t$('#login_form').submit((e)=>{\n\t\t\te.preventDefault();\n\t\t\tvar credentials = {\n\t\t\t\tusername: $('#inputUsername').val(),\n\t\t\t\tpassword: $('#inputPassword').val()\n\t\t\t}\n\n\t\t\tRequest.post('/authenticate', credentials, (data)=>{\n\t\t\t\tlocalStorage.accessToken = data.access_token;\n\t\t\t});\n\t\t});\n\t},\n\n\trender: function() {\n\t\treturn (\n\t\t  <div>\n\t\t  <h3 className=\"text-center\">Hearing CMS</h3>\n\t\t  <form id=\"login_form\" className=\"form-horizontal\">\n\t\t    <fieldset>\n\t\t      <div className=\"loginForm\">\n\t\t        <div className=\"panel panel-warning\">\n\t\t\t  \n\t\t\t      <div className=\"panel-heading\">\n\t\t\t        <h3 className=\"panel-title\">Login</h3>\n\t\t\t      </div>\n\n\t\t\t      <div className=\"panel-body\">\n\t\t\t    \n\t\t\t        <div className=\"form-group\">\n\t\t              <label htmlFor=\"inputUsername\" className=\"col-md-2 control-label\">\n\t\t\t\t        Username\n\t\t\t\t      </label>\n\t\t\t\t      <div className=\"col-md-10\">\n\t\t\t\t        <input className=\"form-control\" id=\"inputUsername\" placeholder=\"username\" type=\"text\"></input>\n\t\t\t\t      </div>\n\t\t\t\t    </div>\n\n                    <div className=\"form-group\">\n\t\t              <label htmlFor=\"inputPassword\" className=\"col-md-2 control-label\">\n\t\t\t\t        Password\n\t\t\t\t      </label>\n\t\t\t\t      <div className=\"col-md-10\">\n\t\t\t\t        <input className=\"form-control\" id=\"inputPassword\" placeholder=\"password\" type=\"password\"></input>\n\t\t\t\t      </div>\n\t\t\t\t    </div>\n                    \n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t          <div className=\"col-md-12\">\n\t\t\t            <button type=\"submit\" className=\"btn btn-warning center\">Submit</button>\n\t\t\t          </div>\n\t\t            </div>\n\n\t\t\t      </div>\n\t\t\t    </div>\n\t\t      </div>\n\t\t    </fieldset>\n\t\t  </form>\n\t\t  </div>\n\t\t);\n\t}\n});\n\nReactDOM.render(\n\t<LoginForm />,\n\tdocument.getElementById('loginform')\n);\n","var Manual = React.createClass({\n\trender: function() {\n\t\treturn (\n\t\t  <div className=\"panel panel-info\">\n\t\t    <div className=\"panel-heading\">\n\t\t\t  <h3 className=\"panel-title\">Manual</h3>\n\t\t\t</div>\n\t\t\t<div className=\"panel-body\">\n\t\t      <ul>\n\t\t\t    <li>\n\t\t\t      <h6>Listen to voice played</h6>\n\t\t\t    </li>\n\t\t\t    <li>\n\t\t\t      <h6>Compare the voice played to the word displayed on the word list</h6>\n\t\t\t    </li>\n\t\t\t    <li>\n\t\t\t      <h6>Determine whether the sample is correct, incorrect, unsure or is a noise</h6>\n\t\t\t    </li>\n\t\t      </ul>\n\t\t\t</div>\n\t\t  </div>\n\t\t);\n\t}\n});\n\n/*ReactDOM.render(\n\t<Manual />,\n\tdocument.getElementById('manual')\n);*/\n","// Module: Wrapper for the AJAX calls with access token\nvar Request = (function() {\n\t\n\tvar accessToken = localStorage.accessToken;\n\treturn {\n\t\tget: function(url, data, success, dataType) {\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tdata: data,\n\t\t\t\tsuccess: success,\n\t\t\t\tdataType: dataType,\n\t\t\t\tbeforeSend: function(xhr) {\n\t\t\t\t\txhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tpost: function(url, data, success, dataType) {\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: data,\n\t\t\t\tsuccess: success,\n\t\t\t\tdataType: dataType,\n\t\t\t\tbeforeSend: function(xhr) {\n\t\t\t\t\txhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tpatch: function() {\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tmethod: 'PATCH',\n\t\t\t\tdata: data,\n\t\t\t\tsuccess: success,\n\t\t\t\tdataType: dataType,\n\t\t\t\tbeforeSend: function(xhr) {\n\t\t\t\t\txhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tput: function() {\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tmethod: 'PUT',\n\t\t\t\tdata: data,\n\t\t\t\tsuccess: success,\n\t\t\t\tdataType: dataType,\n\t\t\t\tbeforeSend: function(xhr) {\n\t\t\t\t\txhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}());\n","\n","var Button = React.createClass({\n\n  update: function() {\n  \tvar content = {\n\t  op: 'add',\n\t  field: this.props.fieldId,\n      value: 1\n\t};\n\t$.ajax('/api/samples/' + this.props.id, {\n\t  method: 'PATCH',\n\t  accepts: 'application/json',\n\t  contentType: 'application/json',\n\t  data: JSON.stringify(content)\n\t}).done((data) => {\n\t  this.props.onClick();\n\t  PubSub.publish('sampleViewed', 'sampleViewed');\n\t});\n    \n  },\n\n  render: function() {\n    var btnClass = \"btn \" + this.props.btnClass + \" btn-block\";\n\tvar iconClass = \"glyphicon \" + this.props.iconClass;\n    return (\n      <div className=\"col-md-3\">\n\t    <a id={this.props.fieldId} onClick={this.update} className={btnClass}>\n\t\t  <span className={iconClass}></span>\n\t\t  {this.props.text}\n\t\t</a>\n\t  </div>\n\t);\n  }\n});\n\nvar ButtonGroup = React.createClass({\n  render: function() {\n    return (\n      <div className=\"row\">\n\t    <Button id={this.props.id} fieldId=\"correct\" btnClass=\"btn-primary\" iconClass=\"glyphicon-ok-sign\" text=\"Correct\" onClick={this.props.onClick} />\n\t\t<Button id={this.props.id} fieldId=\"incorrect\" btnClass=\"btn-danger\" iconClass=\"glyphicon-remove-sign\" text=\"Incorrect\" onClick={this.props.onClick} />\n\t\t<Button id={this.props.id} fieldId=\"unsure\" btnClass=\"btn-warning\" iconClass=\"glyphicon-question-sign\" text=\"Unsure\" onClick={this.props.onClick} />\n\t\t<Button id={this.props.id} fieldId=\"noise\" btnClass=\"btn-info\" iconClass=\"glyphicon-info-sign\" text=\"Noise\" onClick={this.props.onClick} />  \n\t  </div>\n    );\n  }\n});\n\nvar WordImage = React.createClass({\n  render: function() {\n    return (\n\t  <div className=\"row\">\n\t    <div className=\"col-md-8 col-md-offset-2\">\n\t\t  <img src={this.props.src} className=\"img-responsive center\" />\n\t    </div>\n      </div>\n\t);\n  }\n});\n\nvar Text = React.createClass({\n  render: function() {\n    return (\n      <div className=\"row\">\n\t    <div className=\"col-md-8 col-md-offset-2\">\n\t\t  <h3 className=\"text-center\">{this.props.text}</h3>\n\t\t</div>\n\t  </div>\n\t);\n  }\n});\n\nvar Player = React.createClass({\n  componentDidUpdate: function() {\n  \t// Load the new source\n  \t$('#player').load();\n  },\n\n  render: function() {\n    return (\n      <div className=\"row\">\n\t    <div className=\"col-md-8 col-md-offset-2\">\n\t      <audio id=\"player\" controls className=\"center\">\n\t\t    <source src={'data:audio/wav;base64,' + this.props.src}>\n\t\t    </source>\n\t\t  </audio>\n\t    </div>\n      </div>\n\t);\n  }\n});\n\nvar SampleCard = React.createClass({\n\tgetInitialState: function() {\n\t\treturn {\n\t\t\tresult: '',\n\t\t\ti: -1,\n\t\t\tloaded: false\n\t\t};\n\t}, \n\n\tgetSample: function() {\n\t\tthis.request = Request.get('/api/samples', null, (result) => {\n\t\t\tconsole.log('got');\n\t\t\tconsole.log(result);\n\t\t\tthis.setState({\n\t\t\t\tresult: result,\n\t\t\t\ti: 0,\n\t\t\t\tloaded: true\n\t\t\t});\n\t\t}.bind(this));\n\t},\n\n\tcomponentDidMount: function() {\n\t\tthis.getSample();\n\t},\n\n\tcomponentWillUnmount: function() {\n\t\tthis.request.abort();\n\t},\n\t\n\tnextSample: function() {\n\t\tif (this.state.i + 1 < this.state.result.length) {\n\t\t\tthis.setState({\n\t\t\t\ti: this.state.i + 1\n\t\t\t});\n\t\t} else {\n\t\t\tthis.getSample();\t\n\t\t}\n\t},\n\n\trender: function() {\n\t\t// Check if component is completely rendered\n\t\tif (this.state.loaded) {\n\t\t\treturn (\n\t\t\t\t<div className=\"sampleCard\">\n\t\t\t\t  <div className=\"panel panel-primary\">\n\t\t\t\t\t<div className=\"panel-heading\">\n\t\t\t\t\t  <h3 className=\"panel-title\">Validation</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"panel-body\">  \n\t\t\t\t\t  <div className=\"container-fluid\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<WordImage src={'../img/' + this.state.result[this.state.i].img} />\n\t\t\t\t\t\t<Text text={this.state.result[this.state.i].word} />    \n\n\t\t\t\t\t\t<Player src={this.state.result[this.state.i].sample} />;\n\t\t\t\t\t\t<ButtonGroup id={this.state.result[this.state.i].id} onClick={this.nextSample} />    \n\n\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <div>Loading</div>;\n\t\t}\n\t}\n});\n\n/*ReactDOM.render(\n\t<SampleCard />,\n\tdocument.getElementById('card')\n);*/\n"],"sourceRoot":"/source/"}